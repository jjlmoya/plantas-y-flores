---
import BaseLayout from '../../layouts/BaseLayout.astro';
import CalendarFilters from '../../components/CalendarFilters.vue';
import { getMonthlyTasksWithUI, getAvailableCalendarCategories, getGlobalCalendarConfig, getAvailableActivities, getCategoryPlantsWithCalendar } from '../../utils/calendar-inheritance.js';

// Get current month data with UI helpers
const currentMonth = new Date().getMonth() + 1; // 1-12
const monthlyData = await getMonthlyTasksWithUI(currentMonth);
const categories = await getAvailableCalendarCategories();
const activities = await getAvailableActivities();
const globalConfig = await getGlobalCalendarConfig();

const { tasks: monthlyTasks, ui, monthName: currentMonthName, seasonalTips } = monthlyData;

// Not using sample plants anymore as per user feedback

const nextMonth = currentMonth === 12 ? 1 : currentMonth + 1;
const nextMonthName = ui.getMonthName(nextMonth);

// Get all plants with calendar data for filtering
const allPlantsWithCalendar = [];
for (const category of categories) {
  const categoryPlants = await getCategoryPlantsWithCalendar(category);
  allPlantsWithCalendar.push(...categoryPlants);
}



// Generate quick navigation months using dynamic month names
const quickNavMonths = Array.from({length: 12}, (_, i) => ({
  number: i + 1,
  name: ui.getMonthName(i + 1),
  isCurrent: i + 1 === currentMonth
}));
---

<BaseLayout 
  title="Calendario de Plantaci√≥n | Gu√≠a Completa de Cultivo"
  description={`Calendario de plantaci√≥n para ${currentMonthName}. Descubre qu√© plantar, cu√°ndo sembrar y c√≥mo cuidar tus plantas mes a mes.`}
>
  <div class="calendar-dashboard">
    <!-- Header -->
    <header class="dashboard-header">
      <div class="container">
        <!-- Hemisphere Selector -->
        <div class="hemisphere-selector">
          <button 
            id="hemisphere-toggle" 
            class="hemisphere-toggle"
            title="Cambiar hemisferio"
          >
            <span id="hemisphere-icon">üåé</span>
          </button>
        </div>

        <h1>üìÖ Calendario de Plantaci√≥n</h1>
        <p>Planifica tu jard√≠n y huerto siguiendo el calendario natural</p>
      </div>
    </header>

    <div class="container">
      <!-- Current Month Section -->
      <section class="current-month-section">
        <h2>üå± Este Mes: {currentMonthName}</h2>
        
        <div class="month-grid">
          <!-- Tasks Widget -->
          <div class="tasks-widget">
            <h3>‚ö° Tareas Urgentes</h3>
            {Object.keys(monthlyTasks).length > 0 ? (
              <div class="tasks-list">
                {Object.entries(monthlyTasks).map(([category, plants]) => (
                  <div class="category-tasks" key={category}>
                    <h4>
                      <span class="category-icon">{ui.getCategoryIcon(category)}</span>
                      {ui.formatCategoryName(category)}
                    </h4>
                    {Object.entries(plants).map(([plantSlug, tasks]) => (
                      <div class="plant-tasks" key={plantSlug}>
                        <strong>{ui.formatPlantName(plantSlug)}</strong>
                        <ul>
                          {tasks.map(task => (
                            <li key={task} class={`task-priority-${ui.getTaskPriority(task)}`}>
                              <span class="task-icon">{ui.getTaskIcon(task)}</span>
                              {ui.formatTaskName(task)}
                            </li>
                          ))}
                        </ul>
                      </div>
                    ))}
                  </div>
                ))}
              </div>
            ) : (
              <p class="no-tasks">No hay tareas espec√≠ficas este mes</p>
            )}
          </div>

          <!-- Next Month Preview -->
          <div class="preview-widget">
            <h3>üóìÔ∏è Pr√≥ximamente: {nextMonthName}</h3>
            <div class="coming-up">
              <a href={`/calendario/mes/${ui.getMonthSlug(nextMonth)}/`} class="preview-link">
                Ver tareas de {nextMonthName} ‚Üí
              </a>
            </div>
          </div>

          <!-- Categories Overview -->
          <div class="categories-widget">
            <h3>üåø Categor√≠as Disponibles</h3>
            <div class="categories-grid">
              {categories.map(category => (
                <a href={`/calendario/categoria/${category}/`} class="category-card" key={category}>
                  <span class="category-icon">{ui.getCategoryIcon(category)}</span>
                  <span class="category-name">{ui.formatCategoryName(category)}</span>
                </a>
              ))}
            </div>
          </div>
        </div>
      </section>

      <!-- Quick Navigation -->
      <section class="quick-nav-section">
        <h2>üóìÔ∏è Navegar por Meses</h2>
        <div class="months-grid">
          {quickNavMonths.map(month => (
            <a 
              href={`/calendario/mes/${ui.getMonthSlug(month.number)}/`} 
              class={`month-link ${month.isCurrent ? 'current' : ''}`}
              key={month.number}
            >
              <span class="month-number">{month.number}</span>
              <span class="month-name">{month.name}</span>
            </a>
          ))}
        </div>
      </section>

      <!-- Filters Section -->
      <section class="filters-section">
        <h2>üîç Explorar y Filtrar Plantas</h2>
        <p>Encuentra plantas espec√≠ficas seg√∫n tus necesidades y experiencia</p>
        
        <div class="filters-container">
          <CalendarFilters 
            client:load
            plants={allPlantsWithCalendar}
            availableCategories={categories}
            availableActivities={activities}
            currentMonth={currentMonth}
          />
        </div>
      </section>

      <!-- Activities Section -->
      <section class="activities-section">
        <h2>üìã Explorar por Actividades</h2>
        <p>Encuentra todas las plantas organizadas por tipo de actividad de jardiner√≠a</p>
        
        <div class="activities-grid">
          {activities.map(activity => (
            <a href={`/calendario/actividad/${activity}/`} class="activity-card" key={activity}>
              <div class="activity-header">
                <span class="activity-icon">{ui.getTaskIcon(activity)}</span>
                <h3>{ui.formatTaskName(activity)}</h3>
              </div>
              <p>Ver todas las plantas para {ui.formatTaskName(activity).toLowerCase()}</p>
            </a>
          ))}
        </div>
      </section>

      <!-- Tips Section -->
      <section class="tips-section">
        <h2>üí° Consejos de {currentMonthName}</h2>
        <div class="tips-grid">
          {seasonalTips.temperature && (
            <div class="tip-card">
              <h3>üå°Ô∏è Temperatura</h3>
              <p>{seasonalTips.temperature}</p>
            </div>
          )}
          
          {seasonalTips.watering && (
            <div class="tip-card">
              <h3>üíß Riego</h3>
              <p>{seasonalTips.watering}</p>
            </div>
          )}

          {seasonalTips.sunlight && (
            <div class="tip-card">
              <h3>‚òÄÔ∏è Sol</h3>
              <p>{seasonalTips.sunlight}</p>
            </div>
          )}
        </div>
      </section>
    </div>

  </div>
</BaseLayout>

<style>
  .calendar-dashboard {
    min-height: 100vh;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  }

  .dashboard-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    text-align: center;
    padding: 3rem 0;
    margin-bottom: 2rem;
    position: relative;
  }

  .hemisphere-selector {
    position: absolute;
    top: 1rem;
    right: 1rem;
  }

  .hemisphere-toggle {
    background: rgba(255, 255, 255, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.3);
    color: white;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    cursor: pointer;
    font-size: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .hemisphere-toggle:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: scale(1.05);
  }

  .dashboard-header h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    font-weight: 700;
  }

  .dashboard-header p {
    font-size: 1.2rem;
    opacity: 0.9;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .current-month-section {
    margin-bottom: 3rem;
  }

  .current-month-section h2 {
    font-size: 2rem;
    margin-bottom: 1.5rem;
    color: #2d3748;
  }

  .month-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .tasks-widget, .preview-widget, .categories-widget {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(0, 0, 0, 0.05);
  }

  .tasks-widget h3, .preview-widget h3, .categories-widget h3 {
    font-size: 1.3rem;
    margin-bottom: 1rem;
    color: #2d3748;
    border-bottom: 2px solid #e2e8f0;
    padding-bottom: 0.5rem;
  }

  .category-tasks {
    margin-bottom: 1rem;
  }

  .category-tasks h4 {
    color: #4a5568;
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
  }

  .plant-tasks {
    margin-bottom: 0.75rem;
    padding: 0.75rem;
    background: #f7fafc;
    border-radius: 6px;
  }

  .plant-tasks strong {
    color: #2d3748;
    display: block;
    margin-bottom: 0.25rem;
  }

  .plant-tasks ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .plant-tasks li {
    display: flex;
    align-items: center;
    margin-bottom: 0.25rem;
    font-size: 0.9rem;
    color: #4a5568;
  }

  .task-icon {
    margin-right: 0.5rem;
    font-weight: bold;
    width: 20px;
    text-align: center;
  }

  .task-priority-high {
    color: #c53030;
    font-weight: 600;
  }

  .task-priority-medium {
    color: #d69e2e;
    font-weight: 500;
  }

  .task-priority-low {
    color: #718096;
  }

  .category-icon {
    margin-right: 0.5rem;
    font-size: 1.1rem;
  }

  .no-tasks {
    color: #718096;
    font-style: italic;
    text-align: center;
    padding: 2rem;
  }

  .preview-link {
    display: inline-block;
    background: #667eea;
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 6px;
    text-decoration: none;
    transition: background 0.3s ease;
  }

  .preview-link:hover {
    background: #5a67d8;
  }

  .categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 0.75rem;
  }

  .category-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1rem;
    background: #f7fafc;
    border-radius: 8px;
    text-decoration: none;
    color: #2d3748;
    transition: all 0.3s ease;
    border: 1px solid #e2e8f0;
  }

  .category-card:hover {
    background: #edf2f7;
    transform: translateY(-2px);
  }

  .category-icon {
    font-size: 2rem;
    margin-bottom: 0.5rem;
  }

  .category-name {
    font-weight: 500;
    font-size: 0.9rem;
  }

  .months-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
    gap: 0.75rem;
    margin-bottom: 2rem;
  }

  .month-link {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1rem;
    background: white;
    border-radius: 8px;
    text-decoration: none;
    color: #2d3748;
    transition: all 0.3s ease;
    border: 1px solid #e2e8f0;
  }

  .month-link:hover {
    background: #f7fafc;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .month-link.current {
    background: #667eea;
    color: white;
    border-color: #667eea;
  }

  .month-number {
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: 0.25rem;
  }

  .month-name {
    font-size: 0.9rem;
    font-weight: 500;
  }

  .tips-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
  }

  .tip-card {
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    border-left: 4px solid #48bb78;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .tip-card h3 {
    margin-bottom: 0.75rem;
    color: #2d3748;
    font-size: 1.1rem;
  }

  .tip-card p {
    color: #4a5568;
    line-height: 1.6;
    margin: 0;
  }

  /* Filters Section */
  .filters-section {
    margin-bottom: 3rem;
  }

  .filters-section h2 {
    font-size: 2rem;
    margin-bottom: 0.5rem;
    color: #2d3748;
    text-align: center;
  }

  .filters-section p {
    text-align: center;
    color: #718096;
    margin-bottom: 2rem;
  }

  .filters-container {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(0, 0, 0, 0.05);
  }

  /* Activities Section */
  .activities-section {
    margin-bottom: 3rem;
  }

  .activities-section h2 {
    font-size: 2rem;
    margin-bottom: 0.5rem;
    color: #2d3748;
    text-align: center;
  }

  .activities-section p {
    text-align: center;
    color: #718096;
    margin-bottom: 2rem;
  }

  .activities-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
  }

  .activity-card {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(0, 0, 0, 0.05);
    text-decoration: none;
    color: inherit;
    transition: all 0.3s ease;
    text-align: center;
  }

  .activity-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15);
    color: inherit;
  }

  .activity-header {
    margin-bottom: 1rem;
  }

  .activity-icon {
    font-size: 3rem;
    display: block;
    margin-bottom: 1rem;
  }

  .activity-card h3 {
    font-size: 1.3rem;
    margin: 0 0 1rem 0;
    color: #2d3748;
  }

  .activity-card p {
    color: #718096;
    margin: 0;
    font-size: 0.9rem;
  }


  @media (max-width: 768px) {
    .dashboard-header h1 {
      font-size: 2rem;
    }
    
    .month-grid {
      grid-template-columns: 1fr;
    }
    
    .months-grid {
      grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    }

    .activities-grid {
      grid-template-columns: 1fr;
    }

    .hemisphere-selector {
      top: 0.5rem;
      right: 0.5rem;
    }

    .hemisphere-toggle {
      width: 40px;
      height: 40px;
      font-size: 1.2rem;
    }
  }
</style>

<script>
  // Hemisphere selector functionality
  let currentHemisphere = 'northern';
  
  // Load saved hemisphere preference
  if (typeof localStorage !== 'undefined') {
    const saved = localStorage.getItem('calendar-hemisphere');
    if (saved && ['northern', 'southern'].includes(saved)) {
      currentHemisphere = saved;
      updateHemisphereDisplay();
    }
  }

  function toggleHemisphere() {
    currentHemisphere = currentHemisphere === 'northern' ? 'southern' : 'northern';
    updateHemisphereDisplay();
    
    // Save preference
    if (typeof localStorage !== 'undefined') {
      localStorage.setItem('calendar-hemisphere', currentHemisphere);
    }
    
    // Show notification
    showHemisphereNotification();
  }

  function updateHemisphereDisplay() {
    const icon = document.getElementById('hemisphere-icon');
    const toggle = document.getElementById('hemisphere-toggle');
    
    if (currentHemisphere === 'northern') {
      icon.textContent = 'üåé';
      toggle.title = 'Hemisferio Norte - Cambiar a Sur';
    } else {
      icon.textContent = 'üåè';
      toggle.title = 'Hemisferio Sur (+6 meses) - Cambiar a Norte';
    }
  }

  function showHemisphereNotification() {
    const notification = document.createElement('div');
    notification.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      background: #667eea;
      color: white;
      padding: 1rem 1.5rem;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
      z-index: 1000;
      animation: slideIn 0.3s ease;
    `;
    
    const hemisphere = currentHemisphere === 'northern' ? 'Norte' : 'Sur';
    const adjustment = currentHemisphere === 'southern' ? ' (+6 meses)' : '';
    notification.innerHTML = `üåç Hemisferio ${hemisphere}${adjustment}`;
    
    document.body.appendChild(notification);
    
    // Add animation keyframes
    if (!document.querySelector('#notification-styles')) {
      const style = document.createElement('style');
      style.id = 'notification-styles';
      style.textContent = `
        @keyframes slideIn {
          from { transform: translateX(100%); opacity: 0; }
          to { transform: translateX(0); opacity: 1; }
        }
        @keyframes slideOut {
          from { transform: translateX(0); opacity: 1; }
          to { transform: translateX(100%); opacity: 0; }
        }
      `;
      document.head.appendChild(style);
    }
    
    // Remove notification after 3 seconds
    setTimeout(() => {
      notification.style.animation = 'slideOut 0.3s ease';
      setTimeout(() => {
        if (document.body.contains(notification)) {
          document.body.removeChild(notification);
        }
      }, 300);
    }, 3000);
  }

  // Initialize display on load
  document.addEventListener('DOMContentLoaded', function() {
    updateHemisphereDisplay();
    
    // Add click event listener
    const toggle = document.getElementById('hemisphere-toggle');
    if (toggle) {
      toggle.addEventListener('click', toggleHemisphere);
    }
  });
</script>