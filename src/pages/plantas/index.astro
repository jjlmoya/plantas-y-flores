---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PlantGrid from '../../components/PlantGrid.vue';
import { getPlants } from '../../utils/data.js';

const plants = await getPlants();
const sortedPlants = plants
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

// Get search query from URL
const url = new URL(Astro.request.url);
const searchQuery = url.searchParams.get('search') || '';

let plantsData = sortedPlants.map(plant => ({
  id: plant.data.id,
  slug: plant.slug,
  title: plant.data.title,
  excerpt: plant.data.excerpt,
  date: plant.data.date,
  featured_image: plant.data.featured_image,
  main_image: plant.data.main_image,
  categories: plant.data.categories,
  tags: plant.data.tags
}));

// Filter plants if search query exists
if (searchQuery.trim()) {
  const query = searchQuery.toLowerCase().trim();
  plantsData = plantsData.filter(plant => {
    const titleMatch = plant.title.toLowerCase().includes(query);
    const excerptMatch = plant.excerpt && plant.excerpt.toLowerCase().includes(query);
    const categoryMatch = plant.categories && 
      plant.categories.some(cat => cat.name.toLowerCase().includes(query));
    const tagsMatch = plant.tags && 
      plant.tags.some(tag => tag.name.toLowerCase().includes(query));
    
    return titleMatch || excerptMatch || categoryMatch || tagsMatch;
  })
  .sort((a, b) => {
    // Priority scoring for search results
    const aTitle = a.title.toLowerCase();
    const bTitle = b.title.toLowerCase();
    const queryLower = query.toLowerCase();
    
    const aStartsWith = aTitle.startsWith(queryLower);
    const bStartsWith = bTitle.startsWith(queryLower);
    
    if (aStartsWith && !bStartsWith) return -1;
    if (!aStartsWith && bStartsWith) return 1;
    
    const aIncludes = aTitle.includes(queryLower);
    const bIncludes = bTitle.includes(queryLower);
    
    if (aIncludes && !bIncludes) return -1;
    if (!aIncludes && bIncludes) return 1;
    
    return a.title.localeCompare(b.title, 'es');
  });
}
---

<BaseLayout 
  title="Todas las Plantas - Plantas y Flores"
  description="Descubre nuestra colección completa de plantas y flores. Más de 100 artículos sobre jardinería, cultivo y cuidado de plantas."
  canonical="https://plantasyflores.online/plantas/"
>
  <div class="plants-page">
    <header class="plants-header">
      <nav class="breadcrumb">
        <a href="/">Inicio</a>
        <span class="breadcrumb__separator">›</span>
        <span class="breadcrumb__current">Todas las plantas</span>
      </nav>
      
      <h1 class="plants-header__title">
        {searchQuery ? `Resultados para "${searchQuery}"` : 'Todas las Plantas'}
      </h1>
      <p class="plants-header__description">
        {searchQuery 
          ? `Encontramos ${plantsData.length} plantas que coinciden con tu búsqueda.`
          : 'Explora nuestra completa biblioteca de plantas y flores. Encuentra guías detalladas sobre cultivo, cuidados y características de más de 100 especies diferentes.'
        }
      </p>
      <div class="plants-header__meta">
        {plantsData.length} plantas {searchQuery ? 'encontradas' : 'disponibles'}
        {searchQuery && (
          <a href="/plantas/" class="clear-search">
            <span>×</span> Ver todas las plantas
          </a>
        )}
      </div>
    </header>

    <section class="plants-content">
      <PlantGrid 
        client:load
        plants={plantsData}
      />
    </section>
  </div>
</BaseLayout>

<style>
.plants-header {
  background: linear-gradient(135deg, #4a7c23 0%, #2d5016 100%);
  color: white;
  padding: 3rem 2rem;
  border-radius: 16px;
  margin-bottom: 3rem;
}

.breadcrumb {
  margin-bottom: 1.5rem;
  font-size: 0.875rem;
  opacity: 0.9;
}

.breadcrumb a {
  color: white;
  text-decoration: none;
  transition: opacity 0.3s ease;
}

.breadcrumb a:hover {
  opacity: 0.8;
}

.breadcrumb__separator {
  margin: 0 0.5rem;
}

.breadcrumb__current {
  opacity: 0.7;
}

.plants-header__title {
  font-size: 2.5rem;
  font-weight: 800;
  margin: 0 0 1rem 0;
  line-height: 1.2;
}

.plants-header__description {
  font-size: 1.125rem;
  line-height: 1.6;
  margin: 0 0 1rem 0;
  opacity: 0.9;
  max-width: 600px;
}

.plants-header__meta {
  font-size: 0.875rem;
  opacity: 0.8;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.clear-search {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background: rgba(255, 255, 255, 0.15);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 20px;
  color: white;
  text-decoration: none;
  font-size: 0.8rem;
  font-weight: 600;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
}

.clear-search:hover {
  background: rgba(255, 255, 255, 0.25);
  border-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-1px);
}

.clear-search span {
  font-size: 1.2rem;
  font-weight: 700;
  line-height: 1;
}

.plants-content {
  margin-bottom: 3rem;
}

@media (max-width: 768px) {
  .plants-header {
    padding: 2rem 1.5rem;
    margin-bottom: 2rem;
  }
  
  .plants-header__title {
    font-size: 2rem;
  }
  
  .breadcrumb {
    margin-bottom: 1rem;
  }
  
  .plants-header__meta {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.75rem;
  }
}

@media (max-width: 480px) {
  .plants-header__title {
    font-size: 1.75rem;
  }
  
  .plants-header {
    padding: 1.5rem 1rem;
  }
}
</style>