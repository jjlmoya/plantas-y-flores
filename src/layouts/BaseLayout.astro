---
import Navigation from '../components/Navigation.vue';
import Footer from '../components/Footer.vue';
import GDPRConsent from '../components/GDPRConsent.vue';

export interface Props {
  title: string;
  description: string;
  image?: string;
  canonical?: string;
  type?: string;
  keywords?: string;
  publishedDate?: string;
  modifiedDate?: string;
  category?: string;
  tags?: string[];
}

const { 
  title, 
  description, 
  image, 
  canonical,
  type = 'website',
  keywords,
  publishedDate,
  modifiedDate,
  category,
  tags = []
} = Astro.props;

const defaultImage = '/brand/logo.png';
const siteUrl = 'https://plantasyflores.online';
const currentUrl = canonical || new URL(Astro.url.pathname, siteUrl).href;
const fullImageUrl = image ? new URL(image, siteUrl).href : new URL(defaultImage, siteUrl).href;

// Generate keywords from title and description if not provided
const autoKeywords = keywords || [
  'plantas', 'flores', 'jardinería', 'cultivo', 'jardineraamable',
  ...(title.toLowerCase().split(/\s+/).filter(word => word.length > 3)),
  ...(category ? [category] : []),
  ...tags
].join(', ');
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="apple-touch-icon" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- PWA Manifest -->
    <link rel="manifest" href="/manifest.json" />
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="default" />
    <meta name="apple-mobile-web-app-title" content="Plantas y Flores" />
    
    <!-- iOS Icons -->
    <link rel="apple-touch-icon" sizes="72x72" href="/icons/icon-72x72.png" />
    <link rel="apple-touch-icon" sizes="96x96" href="/icons/icon-96x96.png" />
    <link rel="apple-touch-icon" sizes="128x128" href="/icons/icon-128x128.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/icons/icon-144x144.png" />
    <link rel="apple-touch-icon" sizes="152x152" href="/icons/icon-152x152.png" />
    <link rel="apple-touch-icon" sizes="192x192" href="/icons/icon-192x192.png" />
    <link rel="apple-touch-icon" sizes="384x384" href="/icons/icon-384x384.png" />
    <link rel="apple-touch-icon" sizes="512x512" href="/icons/icon-512x512.png" />
    
    <!-- Windows Tiles -->
    <meta name="msapplication-TileColor" content="#10b981" />
    <meta name="msapplication-TileImage" content="/icons/icon-144x144.png" />
    <meta name="msapplication-config" content="/browserconfig.xml" />
    
    <!-- Additional SEO Meta Tags -->
    <meta name="author" content="jardineraamable" />
    <meta name="keywords" content={autoKeywords} />
    <meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1" />
    <meta name="language" content="es" />
    <meta name="geo.region" content="ES" />
    <meta name="geo.country" content="Spain" />
    <meta name="revisit-after" content="7 days" />
    <meta name="rating" content="general" />
    <meta name="distribution" content="global" />
    {category && <meta name="category" content={category} />}
    {publishedDate && <meta name="article:published_time" content={publishedDate} />}
    {modifiedDate && <meta name="article:modified_time" content={modifiedDate} />}
    
    <!-- SEO Meta Tags -->
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={currentUrl} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type === 'article' ? 'article' : 'website'} />
    <meta property="og:url" content={currentUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={fullImageUrl} />
    <meta property="og:image:alt" content={title} />
    <meta property="og:image:type" content="image/png" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="Plantas y Flores" />
    <meta property="og:locale" content="es_ES" />
    <meta property="og:locale:alternate" content="es" />
    {publishedDate && <meta property="article:published_time" content={publishedDate} />}
    {modifiedDate && <meta property="article:modified_time" content={modifiedDate} />}
    {category && <meta property="article:section" content={category} />}
    {tags.map(tag => <meta property="article:tag" content={tag} />)}
    <meta property="article:author" content="jardineraamable" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={currentUrl} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={fullImageUrl} />
    <meta name="twitter:image:alt" content={title} />
    <meta name="twitter:site" content="@JardineraAmable" />
    <meta name="twitter:creator" content="@JardineraAmable" />
    
    <!-- Schema.org structured data -->
    <script type="application/ld+json" set:html={JSON.stringify(
      type === 'article' ? {
        "@context": "https://schema.org",
        "@type": "Article",
        "headline": title,
        "description": description,
        "image": fullImageUrl,
        "author": {
          "@type": "Person",
          "name": "jardineraamable",
          "url": "https://plantasyflores.online/contacto/"
        },
        "publisher": {
          "@type": "Person",
          "name": "jardineraamable",
          "logo": {
            "@type": "ImageObject",
            "url": new URL(defaultImage, siteUrl).href,
            "width": 400,
            "height": 400
          }
        },
        "datePublished": publishedDate || new Date().toISOString(),
        "dateModified": modifiedDate || publishedDate || new Date().toISOString(),
        "mainEntityOfPage": {
          "@type": "WebPage",
          "@id": currentUrl
        },
        ...(category && { "articleSection": category }),
        ...(tags.length > 0 && { "keywords": tags.join(', ') }),
        "inLanguage": "es-ES",
        "isAccessibleForFree": true,
        "url": currentUrl
      } : {
        "@context": "https://schema.org",
        "@type": "WebSite",
        "name": "Plantas y Flores",
        "alternateName": "Plantas y Flores - Guía de jardinería",
        "description": "Guía personal de jardinería con información completa sobre plantas medicinales, aromáticas, comestibles, de interior y exterior. Consejos de cultivo, cuidados y propiedades de cada planta.",
        "url": "https://plantasyflores.online",
        "image": new URL(defaultImage, siteUrl).href,
        "author": {
          "@type": "Person",
          "name": "jardineraamable",
          "url": "https://plantasyflores.online/contacto/"
        },
        "publisher": {
          "@type": "Person",
          "name": "jardineraamable",
          "logo": {
            "@type": "ImageObject",
            "url": new URL(defaultImage, siteUrl).href,
            "width": 400,
            "height": 400
          }
        },
        "potentialAction": {
          "@type": "SearchAction",
          "target": "https://plantasyflores.online/plantas/?search={search_term_string}",
          "query-input": "required name=search_term_string"
        },
        "mainEntity": {
          "@type": "ItemList",
          "name": "Categorías de Plantas",
          "itemListElement": [
            {
              "@type": "ListItem",
              "position": 1,
              "name": "Plantas Medicinales",
              "url": "https://plantasyflores.online/plantas-medicinales/"
            },
            {
              "@type": "ListItem", 
              "position": 2,
              "name": "Plantas de Exterior",
              "url": "https://plantasyflores.online/plantas-exterior/"
            },
            {
              "@type": "ListItem",
              "position": 3, 
              "name": "Plantas de Interior",
              "url": "https://plantasyflores.online/plantas-interior/"
            },
            {
              "@type": "ListItem",
              "position": 4,
              "name": "Plantas Aromáticas",
              "url": "https://plantasyflores.online/plantas-aromaticas/"
            },
            {
              "@type": "ListItem",
              "position": 5,
              "name": "Plantas Comestibles",
              "url": "https://plantasyflores.online/plantas-comestibles/"
            }
          ]
        },
        "inLanguage": "es-ES",
        "isAccessibleForFree": true
      }
    )} />
    
    <!-- Additional article-specific structured data -->
    {type === 'article' && category && (
      <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "HowTo",
        "name": title,
        "description": description,
        "image": fullImageUrl,
        "author": {
          "@type": "Person",
          "name": "jardineraamable"
        },
        "datePublished": publishedDate || new Date().toISOString(),
        "inLanguage": "es-ES",
        "about": {
          "@type": "Thing",
          "name": category
        }
      })} />
    )}
    
    <!-- Google Analytics 4 - GDPR Compliant -->
    <script is:inline>
      // Google Analytics will be loaded by GDPR component based on consent
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      
      // Set up analytics configuration to be called when consent is given
      window.initAnalytics = function() {
        if (!window.gaInitialized) {
          const script = document.createElement('script');
          script.async = true;
          script.src = 'https://www.googletagmanager.com/gtag/js?id=G-M7QSV8YLWK';
          document.head.appendChild(script);
          
          script.onload = function() {
            gtag('js', new Date());
            gtag('config', 'G-M7QSV8YLWK', {
              page_title: document.title,
              page_location: window.location.href,
              custom_map: {
                'custom_parameter_1': 'plant_category',
                'custom_parameter_2': 'page_type'
              }
            });
            
            gtag('event', 'page_view', {
              page_title: document.title,
              page_location: window.location.href,
              content_group1: 'Plantas y Flores',
              content_group2: window.location.pathname.includes('/plantas-') ? 'Category Page' : 'Content Page'
            });
          };
          window.gaInitialized = true;
        }
      };
    </script>
    
    <!-- Google AdSense - Loaded conditionally via GDPR component -->
    <script is:inline>
      // AdSense will be loaded by GDPRConsent component based on user consent
      window.adConsentGiven = false;
    </script>
    
    <!-- AdSense Optimizations CSS -->
    <link rel="stylesheet" href="/styles/adsense-optimizations.css">
  </head>
  <body>
    <Navigation client:load />
    <main>
      <slot />
    </main>
    <Footer client:load />
    <GDPRConsent client:load />
    
    <!-- PWA Service Worker Registration -->
    <script is:inline>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', async () => {
          try {
            const registration = await navigator.serviceWorker.register('/service-worker.js', {
              scope: '/'
            });
            
            console.log('🌸 PWA: Service Worker registered successfully', registration.scope);
            
            // Handle updates
            registration.addEventListener('updatefound', () => {
              const newWorker = registration.installing;
              if (newWorker) {
                newWorker.addEventListener('statechange', () => {
                  if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
                    console.log('🌸 PWA: New version available');
                    // You could show a toast here to notify users of the update
                  }
                });
              }
            });
            
            // Check for app install prompt
            let deferredPrompt;
            window.addEventListener('beforeinstallprompt', (e) => {
              console.log('🌸 PWA: Install prompt available');
              e.preventDefault();
              deferredPrompt = e;
              
              // You could show a custom install button here
              // showInstallButton();
            });
            
            // Handle app installation
            window.addEventListener('appinstalled', () => {
              console.log('🌸 PWA: App was successfully installed');
              deferredPrompt = null;
            });
            
          } catch (error) {
            console.log('🌸 PWA: Service Worker registration failed', error);
          }
        });
        
        // Handle offline/online status
        window.addEventListener('online', () => {
          console.log('🌸 PWA: Back online');
        });
        
        window.addEventListener('offline', () => {
          console.log('🌸 PWA: Gone offline');
        });
      } else {
        console.log('🌸 PWA: Service Workers not supported');
      }
    </script>
    
    <style>
      html {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
        line-height: 1.7;
        color: #2c3e50;
        font-size: 16px;
        scroll-behavior: smooth;
      }
      
      body {
        margin: 0;
        padding: 0;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
        font-weight: 400;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      
      main {
        max-width: 1200px;
        margin: 0 auto;
        padding: 3rem 2rem;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        margin-top: 2rem;
        margin-bottom: 2rem;
      }
      
      * {
        box-sizing: border-box;
      }
      
      img {
        max-width: 100%;
        height: auto;
        border-radius: 12px;
      }
      
      @media (max-width: 768px) {
        main {
          padding: 2rem 1.5rem;
          margin-top: 1rem;
          margin-bottom: 1rem;
          border-radius: 16px;
        }
        
        html {
          font-size: 15px;
        }
      }
      
      @media (max-width: 480px) {
        main {
          padding: 1.5rem 1rem;
          margin: 0.5rem;
          border-radius: 12px;
        }
        
        html {
          font-size: 14px;
        }
      }
    </style>
  </body>
</html>